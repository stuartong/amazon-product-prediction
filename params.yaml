load_data:
    cat_meta_url: http://deepyeti.ucsd.edu/jianmo/amazon/metaFiles2/meta_Appliances.json.gz
    cat_review_url: http://deepyeti.ucsd.edu/jianmo/amazon/categoryFiles/Appliances.json.gz
preprocess_products:
    word2vec_features: True
    handpicked_features: True
    word2vec_model_name: 'glove-wiki-gigaword-300'
    occurrence_threshold: 500 #threshold of occurrence of a category to be extracted by the vectorizer 
    
success_metrics:
    cutoff: 2
    fake_free_data: False #to use the raw dataset or the dataset of fake_free_dataset from the supervised model

random_state: 42
# base_model/base_iter is only for AdaBoostClassifier

supervised_model:
    model_type: LogisticRegression
    scale: True
    oversample: False
    gscv: False
    tfidf: True
    pca: True
    pca_n_components : 55
    cluster_features : True
    best_k : 1000           # put 'search' if you want to iterate takes awhile otherwise put in best_k for faster run
    ada_base_model: DecisionTreeClassifier
    ada_base_iter: [1,3,5]
    param_dict: {
        learning_rate : [0.005,0.01,0.015],
        subsample : [0.5,0.8],
        n_estimators : [1200,1300,1400],
        max_depth : [8]
        }

    ada_max_depth : 3   #for non-grid search AdaBoost base model
    n_jobs: -1
    split: 0.8
    params:
        random_state : 42
        C : 0.000954095476
        penalty : 'l2'
        solver : 'saga'


evaluate_supervised:
    clf: model/product_success/model.pkl
    X_test: model/product_success/X_test.npy
    X_train: model/product_success/X_train.npy
    X_val: model/product_success/X_val.npy
    y_test: model/product_success/y_test.npy
    y_train: model/product_success/y_train.npy
    y_val: model/product_success/y_val.npy
    f1_avg: "weighted"

fd_evaluate_supervised:
    f1_avg: "weighted"

tfidf_product_success:
    min_df: 0.05
    max_df: 0.7

tfidf_fake_review:
    min_df: 0.05
    max_df: 0.7

fake_review_labeled_file_path: data/fake/labeled_data/amazon_reviews_labeled.txt
load_prepare_fake:
    features:
        word2vec_features: True
        handpicked_features: True
    word2vec_model_name: 'glove-wiki-gigaword-300' 

fd_supervised_model:
    model_type: LogisticRegression
    scale: True
    oversample: True
    gscv: True
    tfidf: True
    pca: True
    pca_n_components : 100
    ada_base_model: DecisionTreeClassifier
    ada_base_iter: [2,8,10]
    param_dict: {
        C : [1.00000000e-05, 1.26185688e-05, 1.59228279e-05, 2.00923300e-05,
       2.53536449e-05, 3.19926714e-05, 4.03701726e-05, 5.09413801e-05,
       6.42807312e-05, 8.11130831e-05, 1.02353102e-04, 1.29154967e-04,
       1.62975083e-04, 2.05651231e-04, 2.59502421e-04, 3.27454916e-04,
       4.13201240e-04, 5.21400829e-04, 6.57933225e-04, 8.30217568e-04,
       1.04761575e-03, 1.32194115e-03, 1.66810054e-03, 2.10490414e-03,
       2.65608778e-03, 3.35160265e-03, 4.22924287e-03, 5.33669923e-03,
       6.73415066e-03, 8.49753436e-03, 1.07226722e-02, 1.35304777e-02,
       1.70735265e-02, 2.15443469e-02, 2.71858824e-02, 3.43046929e-02,
       4.32876128e-02, 5.46227722e-02, 6.89261210e-02, 8.69749003e-02,
       1.09749877e-01, 1.38488637e-01, 1.74752840e-01, 2.20513074e-01,
       2.78255940e-01, 3.51119173e-01, 4.43062146e-01, 5.59081018e-01,
       7.05480231e-01, 8.90215085e-01, 1.12332403e+00, 1.41747416e+00,
       1.78864953e+00, 2.25701972e+00, 2.84803587e+00, 3.59381366e+00,
       4.53487851e+00, 5.72236766e+00, 7.22080902e+00, 9.11162756e+00,
       1.14975700e+01, 1.45082878e+01, 1.83073828e+01, 2.31012970e+01,
       2.91505306e+01, 3.67837977e+01, 4.64158883e+01, 5.85702082e+01,
       7.39072203e+01, 9.32603347e+01, 1.17681195e+02, 1.48496826e+02,
       1.87381742e+02, 2.36448941e+02, 2.98364724e+02, 3.76493581e+02,
       4.75081016e+02, 5.99484250e+02, 7.56463328e+02, 9.54548457e+02,
       1.20450354e+03, 1.51991108e+03, 1.91791026e+03, 2.42012826e+03,
       3.05385551e+03, 3.85352859e+03, 4.86260158e+03, 6.13590727e+03,
       7.74263683e+03, 9.77009957e+03, 1.23284674e+04, 1.55567614e+04,
       1.96304065e+04, 2.47707636e+04, 3.12571585e+04, 3.94420606e+04,
       4.97702356e+04, 6.28029144e+04, 7.92482898e+04, 1.00000000e+05],
        penalty : ['l1', 'l2'],
        random_state : [42],
        solver : ['saga'],
        
    } 
    
     
    ada_max_depth : 3 #for non-grid search AdaBoost base model
    n_jobs: -1
    split: 0.8
    params: None
         
fd_test_stage:
    tfidf_path: model/fake/tfidf_fitted_model.pkl
    pca_fitted_path: model/fake/pca_fitted_model.pkl
    scaler_fitted_path: model/fake/scaler_fitted_model.pkl
    model_fitted: model/fake/model.pkl
    
clustering_model:
    data_source: fake_free  #options: raw, preprocessed, fake_free
    model_type: KMeans #options: KMeans, MiniBatchKMeans, DBSCAN
    params: None 
    raw_data_params:
        tfidf_params:
            min_df: 0.05,
            max_df: 0.7, 
            stop_words: "english"
            ngram_range: (1,2)
        scale: True
        reducer:
            name: PCA  #options: LSA, NMF (PCA is default)
            n_components: 3 ###confirm this section if this is right
            random_state: 42
    preprocessed_params:
        scale: True
        reducer:
        name: PCA  #options: LSA, NMF (PCA is default)
        n_components: 3
        random_state: 42
    fake_free_params:
        scale: True
        reducer:
        name: PCA  #options: LSA, NMF (PCA is default)
        n_components: 3
        random_state: 42
